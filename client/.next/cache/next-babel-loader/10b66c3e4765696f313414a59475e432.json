{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\personal\\\\Kuch bhi\\\\microservices-node-react\\\\ticketing\\\\client\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\n\nvar LandingPage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var currentUser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = _ref.currentUser;\n            console.log(currentUser);\n            return _context.abrupt(\"return\", __jsx(\"h1\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 5,\n                columnNumber: 10\n              }\n            }, \"Landing Page\"));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function LandingPage(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // LandingPage.getInitialProps = async () => {\n//   if (typeof window === \"undefined\") {\n//     // we are on the server!\n//     // requests should be made to http://SERVICENAME.NAMESPACE.svc.cluster.local//.....\n//     // const { data } = await axios.get(\n//     //   \"http://ingress-nginx.ingress-nginx.svc.cluster.local/api/users/currentuser\",\n//     //   {\n//     //     headers: {\n//     //       Host: \"ticketing.dev\"\n//     //     }\n//     //   }\n//     // );\n//     // return data;\n//     const data = {};\n//     return data;\n//   } else {\n//     // we are on the browser!\n//     // requests can be made to the url\n//     const { data } = await axios.get(\"/api/users/currentuser\");\n//     return data;\n//   }\n// };\n\n\n_c = LandingPage;\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["D:/personal/Kuch bhi/microservices-node-react/ticketing/client/pages/index.js"],"names":["axios","LandingPage","currentUser","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,WAAT,QAASA,WAAT;AAClBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AADkB,6CAEX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXD,WAAW;AAAA;AAAA;AAAA,GAAjB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;KA3BMA,W;AA6BN,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst LandingPage = async ({ currentUser }) => {\r\n  console.log(currentUser);\r\n  return <h1>Landing Page</h1>;\r\n};\r\n\r\n// LandingPage.getInitialProps = async () => {\r\n//   if (typeof window === \"undefined\") {\r\n//     // we are on the server!\r\n//     // requests should be made to http://SERVICENAME.NAMESPACE.svc.cluster.local//.....\r\n//     // const { data } = await axios.get(\r\n//     //   \"http://ingress-nginx.ingress-nginx.svc.cluster.local/api/users/currentuser\",\r\n//     //   {\r\n//     //     headers: {\r\n//     //       Host: \"ticketing.dev\"\r\n//     //     }\r\n//     //   }\r\n//     // );\r\n//     // return data;\r\n//     const data = {};\r\n//     return data;\r\n//   } else {\r\n//     // we are on the browser!\r\n//     // requests can be made to the url\r\n//     const { data } = await axios.get(\"/api/users/currentuser\");\r\n\r\n//     return data;\r\n//   }\r\n// };\r\n\r\nexport default LandingPage;\r\n"]},"metadata":{},"sourceType":"module"}